"""
This Python module defines a `MemoryEngine` class responsible for handling and persisting user interactions using a JSON file. The class is primarily designed to store conversations between a user and a system, enabling functionality such as remembering past interactions and suggesting responses to similar future queries. It utilizes methods to load, store, and retrieve interaction data, supporting adaptive learning and insights based on historical data.
"""

import json
import os

class MemoryEngine:
    """
    ğŸ§  Stores user interactions to enable auto-learning.
    Uses JSON-based persistent memory for adaptive insights.
    """

    MEMORY_FILE = "data/memory.json"

    def __init__(self):
        self.memory = self.load_memory()

    def load_memory(self) -> dict:
        """Loads stored user interactions from file."""
        if os.path.exists(self.MEMORY_FILE):
            with open(self.MEMORY_FILE, "r") as f:
                return json.load(f)
        return {"conversations": []}

    def save_memory(self):
        """Saves interactions to file."""
        with open(self.MEMORY_FILE, "w") as f:
            json.dump(self.memory, f, indent=4)

    def store_interaction(self, user_query: str, response: str):
        """Stores interactions for future reference."""
        self.memory["conversations"].append({"user": user_query, "response": response})
        self.save_memory()

    def retrieve_similar_query(self, user_query: str) -> str:
        """Finds similar queries and suggests responses."""
        for entry in self.memory["conversations"]:
            if user_query in entry["user"]:
                return entry["response"]
        return None

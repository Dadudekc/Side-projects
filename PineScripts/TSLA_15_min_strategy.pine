//@version=6
strategy("TSLA 15min Strategy", shorttitle="TSLA_15min_strategy", overlay=true, 
         default_qty_type=strategy.percent_of_equity, default_qty_value=2)


// Purpose:
// This strategy combines EMAs, RSI, ADX, and ATR to trade Tesla (TSLA) on a 15-minute timeframe. 
// It dynamically manages risk and filters trades using higher-timeframe trends and volume conditions.

// Performance Highlights:
// Net Profit: 16,750.70 USD (1.68%)
// Profit Factor: 1.724
// Win Rate: 43.33%
// Risk-Reward Ratio: 2.122


// ----------------------------
// User Inputs
// ----------------------------

// EMA Settings
ema_fast_length = input.int(20, minval=1, title="Fast EMA Length")
ema_slow_length = input.int(50, minval=1, title="Slow EMA Length")

// RSI Settings
rsi_length = input.int(14, minval=1, title="RSI Length")

// ADX Settings
adx_threshold = input.int(15, minval=1, title="ADX Threshold")

// ATR Settings
atr_multiplier = input.float(1.5, minval=0.1, title="ATR Multiplier for Stop Loss")
risk_reward_ratio = input.float(2.5, minval=1.0, title="Risk-Reward Ratio")

// Volume Filter
volume_filter = input.bool(true, title="Enable Volume Filter")

// Trailing Stop Settings
trail_stop_enabled = input.bool(true, title="Enable Trailing Stop")
trail_atr_multiplier = input.float(1.5, minval=0.1, title="Trailing ATR Multiplier")

// Trading Session Hours
trade_start_hour = input.int(9, title="Trade Start Hour (24h format)")
trade_end_hour = input.int(15, title="Trade End Hour (24h format)")

// Higher Timeframe Confirmation
higher_tf = input.timeframe("1D", title="Higher Timeframe for Trend")
sma_htf = request.security(syminfo.tickerid, higher_tf, ta.sma(close, 50))

// ----------------------------
// Indicator Calculations
// ----------------------------

// Moving Averages
ema_fast = ta.ema(close, ema_fast_length)
ema_slow = ta.ema(close, ema_slow_length)

// RSI and ADX
rsi = ta.rsi(close, rsi_length)
[adx, di_plus, di_minus] = ta.dmi(14, 14)

// ATR for Stop Loss/Take Profit
atr = ta.atr(14)

// Volume Condition
avg_volume = ta.sma(volume, 20)
high_volume = volume > avg_volume

// Higher Timeframe Trend
higher_tf_trend_up = close > sma_htf
higher_tf_trend_down = close < sma_htf

// ----------------------------
// Entry Conditions
// ----------------------------

// Long Entry
long_entry = ta.crossover(ema_fast, ema_slow) and 
             rsi < 70 and 
             adx > adx_threshold and 
             (not volume_filter or high_volume) and 
             higher_tf_trend_up

// Short Entry
short_entry = ta.crossunder(ema_fast, ema_slow) and 
              rsi > 30 and 
              adx > adx_threshold and 
              (not volume_filter or high_volume) and 
              higher_tf_trend_down

// ----------------------------
// Exit Conditions
// ----------------------------

// Long Exit
long_exit = ta.crossunder(ema_fast, ema_slow) or rsi > 80

// Short Exit
short_exit = ta.crossover(ema_fast, ema_slow) or rsi < 20

// ----------------------------
// Stop Loss and Take Profit Levels
// ----------------------------

// Long
stop_loss_long = close - (atr * atr_multiplier)
take_profit_long = close + ((atr * atr_multiplier) * risk_reward_ratio)

// Short
stop_loss_short = close + (atr * atr_multiplier)
take_profit_short = close - ((atr * atr_multiplier) * risk_reward_ratio)

// Trailing Stop Logic
var float trail_stop_long = na  // Initialize as na with float type
var float trail_stop_short = na  // Initialize as na with float type

if trail_stop_enabled
    // Update trailing stop levels
    trail_stop_long := close - (atr * trail_atr_multiplier)
    trail_stop_short := close + (atr * trail_atr_multiplier)

// Apply Trailing Stops
if trail_stop_enabled
    if (strategy.position_size > 0) // Long position
        strategy.exit("Long Trail", "Long", stop=trail_stop_long)
    if (strategy.position_size < 0) // Short position
        strategy.exit("Short Trail", "Short", stop=trail_stop_short)


// ----------------------------
// Trade Execution
// ----------------------------

// Long Trades
if (long_entry)
    strategy.entry("Long", strategy.long)
    strategy.exit("Long TP/SL", "Long", stop=stop_loss_long, limit=take_profit_long)

// Short Trades
if (short_entry)
    strategy.entry("Short", strategy.short)
    strategy.exit("Short TP/SL", "Short", stop=stop_loss_short, limit=take_profit_short)

// Apply Trailing Stops
if (trail_stop_enabled)
    if (strategy.position_size > 0) // Long
        strategy.exit("Long Trail", "Long", stop=trail_stop_long)
    if (strategy.position_size < 0) // Short
        strategy.exit("Short Trail", "Short", stop=trail_stop_short)

// ----------------------------
// Visualizations
// ----------------------------

// Plot EMAs
plot(ema_fast, color=color.blue, title="Fast EMA")
plot(ema_slow, color=color.red, title="Slow EMA")

// RSI with Levels
hline(70, "RSI Overbought", color=color.orange)
hline(30, "RSI Oversold", color=color.green)
plot(rsi, title="RSI", color=color.purple)

// ADX Plot
plot(adx, title="ADX", color=color.yellow)

// Higher Timeframe SMA
plot(sma_htf, title="HTF SMA", color=color.gray)

// Trade Signals
plotshape(long_entry, style=shape.triangleup, location=location.belowbar, 
          color=color.new(color.green, 0), size=size.small, title="Buy Signal")
plotshape(short_entry, style=shape.triangledown, location=location.abovebar, 
          color=color.new(color.red, 0), size=size.small, title="Sell Signal")
